{"version":3,"sources":["components/pixabay-api.js","components/ImagesErrorView/ImagesErrorView.jsx","components/Modal/Modal.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Searchbar/Searchbar.jsx","App.js","index.js"],"names":["api","fetchImages","requestKey","page","url","fetch","then","response","ok","json","Promise","reject","Error","ImagesErrorView","message","role","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","props","onClose","handleBackdropClick","event","currentTarget","target","window","addEventListener","this","removeEventListener","src","alt","createPortal","className","onClick","Component","ImageGalleryItem","state","showModal","toggleModal","setState","largeImageUrl","ImageGallery","images","map","image","webformatURL","tags","largeImageURL","id","Button","scroll","scrollToBottom","type","Searchbar","handleRequestChange","value","toLowerCase","handleSubmit","preventDefault","trim","onSubmit","toast","autoComplete","autoFocus","placeholder","onChange","Status","App","error","status","handleFormSubmit","newRequestKey","renderImages","pixabayApi","prevState","hits","catch","finally","prevProps","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"0RAaA,IAEeA,EAFH,CAAEC,YAVd,SAAqBC,EAAYC,GAC/B,IAAMC,EAAG,UAHM,2BAGN,cAAoBF,EAApB,iBAAuCC,EAAvC,gBAJK,qCAIL,wDACT,OAAOE,MAAMD,GAAKE,MAAK,SAAAC,GACrB,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,iC,OCKrBC,MAZf,YAAuC,IAAZC,EAAW,EAAXA,QACzB,OACE,qBAAKC,KAAK,QAAV,SACE,qEAAwCD,Q,iBCDxCE,EAAYC,SAASC,cAAc,eAEnCC,E,4MAeJC,cAAgB,SAAAC,GACC,WAAXA,EAAEC,MACJ,EAAKC,MAAMC,W,EAIfC,oBAAsB,SAAAC,GAChBA,EAAMC,gBAAkBD,EAAME,QAChC,EAAKL,MAAMC,W,uDAhBf,WACEK,OAAOC,iBAAiB,UAAWC,KAAKX,iB,kCAG1C,WACES,OAAOG,oBAAoB,UAAWD,KAAKX,iB,oBAe7C,WACE,MAAqBW,KAAKR,MAAlBU,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IAEb,OAAOC,uBACL,qBAAKC,UAAU,UAAUC,QAASN,KAAKN,oBAAvC,SACE,qBAAKW,UAAU,QAAf,SACE,qBAAKH,IAAKA,EAAKC,IAAKA,QAGxBlB,O,GApCcsB,aAyCLnB,IC3CToB,E,4MACFC,MAAO,CACHC,WAAW,G,EAGfC,YAAc,WACV,EAAKC,UAAS,kBAAoB,CAChCF,WADY,EAAGA,e,4CAKnB,WACE,MAAoCV,KAAKR,MAAjCU,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IAAKU,EAAlB,EAAkBA,cACVH,EAAcV,KAAKS,MAAnBC,UACR,OACE,qBAAIL,UAAU,mBAAd,UACE,qBACEC,QAASN,KAAKW,YACdT,IAAKA,EACLC,IAAKA,EACLE,UAAU,0BAEXK,GACC,cAAC,EAAD,CAAOjB,QAASO,KAAKW,YAAaT,IAAKW,EAAeV,IAAKA,W,GAvB1CI,aAoCZC,IClBJM,MAnBf,YAAmC,IAAXC,EAAU,EAAVA,OACtB,OACE,oBAAIV,UAAU,eAAd,SACGU,EAAOC,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,CACEf,IAAKe,EAAMC,aACXf,IAAKc,EAAME,KACXN,cAAeI,EAAMG,eAChBH,EAAMI,U,QCPfC,E,4MAMJC,OAAS,WACP,EAAK/B,MAAMc,UACXiB,gBAAOC,kB,4CAGT,WACE,OACE,wBAAQlB,QAASN,KAAKuB,OAAQlB,UAAU,SAASoB,KAAK,SAAtD,2B,GAbelB,aAoBNe,IClBTI,G,kNACJjB,MAAQ,CACNtC,WAAY,I,EAOdwD,oBAAsB,SAAAhC,GACpB,EAAKiB,SAAS,CAAEzC,WAAYwB,EAAMC,cAAcgC,MAAMC,iB,EAGxDC,aAAe,SAAAnC,GACbA,EAAMoC,iBAE+B,KAAjC,EAAKtB,MAAMtC,WAAW6D,QAK1B,EAAKxC,MAAMyC,SAAS,EAAKxB,MAAMtC,YAC/B,EAAKyC,SAAS,CAAEzC,WAAY,MAL1B+D,YAAM,qF,4CAQV,WACE,OACE,wBAAQ7B,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAa4B,SAAUjC,KAAK8B,aAA5C,UACE,wBAAQL,KAAK,SAASpB,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAED,uBACCA,UAAU,mBACVoB,KAAK,OACLU,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZT,MAAO5B,KAAKS,MAAMtC,WAClBmE,SAAUtC,KAAK2B,+B,GAvCHpB,cA+CTmB,IC1CTa,EACE,OADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WAGNC,E,4MACJ/B,MAAQ,CACNgC,MAAO,KACPC,OAAQ,OACRvE,WAAY,GACZC,KAAM,EACN2C,OAAQ,I,EASV4B,iBAAmB,SAAAC,GACjB,EAAKhC,SAAS,CAAEzC,WAAYyE,EAAexE,KAAM,EAAG2C,OAAQ,M,EAY9D8B,aAAe,WACb,MAA6B,EAAKpC,MAA1BtC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,KAEpB0E,EACG5E,YAAYC,EAAYC,GACxBG,MAAK,SAAAC,GAAQ,OACZ,EAAKoC,UAAS,SAAAmC,GAAS,MAAK,CAC1BhC,OAAO,GAAD,mBAAMgC,EAAUhC,QAAhB,YAA2BvC,EAASwE,OAC1C5E,KAAM2E,EAAU3E,KAAO,SAG1B6E,OAAM,SAAAR,GAAK,OAAI,EAAK7B,SAAS,CAAE6B,QAAOC,OAAQH,OAC9CW,SAAQ,kBAAM,EAAKtC,SAAS,CAAE8B,OAAQH,Q,wDArB3C,SAAmBY,EAAWJ,GACXA,EAAU5E,aACV6B,KAAKS,MAAMtC,YAG1B6B,KAAK6C,iB,oBAmBT,WACE,MAA0B7C,KAAKS,MAAvBiC,EAAR,EAAQA,OAAQD,EAAhB,EAAgBA,MAEhB,OACE,qCACE,cAAC,EAAD,CAAWR,SAAUjC,KAAK2C,mBAC1B,cAAC,IAAD,CAAgBS,UAAW,MAE1BV,IAAWH,GACV,mBAAGlC,UAAU,cAAb,2CAGDqC,IAAWH,GAAkB,cAAC,IAAD,IAE7BG,IAAWH,GACV,cAAC,EAAD,CAAiBxD,QAAS0D,EAAM1D,UAGjC2D,IAAWH,GACV,qCACE,cAAC,EAAD,CAAcxB,OAAQf,KAAKS,MAAMM,SACjC,cAAC,EAAD,CAAQT,QAASN,KAAK6C,yB,GAhEhBtC,aAwEHiC,ICrFfa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrE,SAASsE,eAAe,W","file":"static/js/main.35814dc1.chunk.js","sourcesContent":["const API_KEY = '22926721-5d20aa08498ffd1ff2f906542';\r\nconst BASE_URL = 'https://pixabay.com/api/';\r\n\r\nfunction fetchImages(requestKey, page) {\r\n  const url = `${BASE_URL}?q=${requestKey}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\r\n  return fetch(url).then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error('No response from server'));\r\n  });\r\n}\r\n\r\nconst api = { fetchImages };\r\n\r\nexport default api;\r\n  ","import PropTypes from 'prop-types';\r\n\r\nfunction ImagesErrorView({ message }) {\r\n  return (\r\n    <div role=\"alert\">\r\n      <p>Sorry, something went wrong. Error: {message}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nImagesErrorView.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImagesErrorView;","import React, { Component } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n  static propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdropClick = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { src, alt } = this.props;\r\n\r\n    return createPortal(\r\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\r\n        <div className=\"Modal\">\r\n          <img src={src} alt={alt} />\r\n        </div>\r\n      </div>,\r\n      modalRoot,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","import React, {Component} from 'react';\r\nimport  PropTypes from 'prop-types';\r\nimport Modal from '../Modal';\r\n\r\nclass ImageGalleryItem extends Component {\r\n    state ={\r\n        showModal: false,\r\n    };\r\n\r\n    toggleModal = () => {\r\n        this.setState(({ showModal }) => ({\r\n          showModal: !showModal,\r\n        }));\r\n      };\r\n    \r\n      render() {\r\n        const { src, alt, largeImageUrl } = this.props;\r\n        const { showModal } = this.state;\r\n        return (\r\n          <li className=\"ImageGalleryItem\">\r\n            <img\r\n              onClick={this.toggleModal}\r\n              src={src}\r\n              alt={alt}\r\n              className=\"ImageGalleryItemImage\"\r\n            />\r\n            {showModal && (\r\n              <Modal onClose={this.toggleModal} src={largeImageUrl} alt={alt} />\r\n            )}\r\n          </li>\r\n        );\r\n      }\r\n      static propTypes = {\r\n        src: PropTypes.string.isRequired,\r\n        alt: PropTypes.string.isRequired,\r\n        largeImageUrl: PropTypes.string.isRequired,\r\n      };\r\n    }\r\n    \r\n    \r\n    export default ImageGalleryItem;\r\n","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\n\r\nfunction ImageGallery({ images }) {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map((image) => (\r\n        <ImageGalleryItem\r\n          src={image.webformatURL}\r\n          alt={image.tags}\r\n          largeImageUrl={image.largeImageURL}\r\n          key={image.id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ImageGallery;","import { Component } from 'react';\r\nimport { animateScroll as scroll } from 'react-scroll';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Button extends Component {\r\n  static propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    page: PropTypes.number.isRequired,\r\n  };\r\n\r\n  scroll = () => {\r\n    this.props.onClick();\r\n    scroll.scrollToBottom();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <button onClick={this.scroll} className=\"Button\" type=\"button\">\r\n        Load more\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Button;","import React, { Component } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    requestKey: '',\r\n  }\r\n\r\n  static propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n  };\r\n\r\n  handleRequestChange = event => {\r\n    this.setState({ requestKey: event.currentTarget.value.toLowerCase() });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (this.state.requestKey.trim() === '') {\r\n      toast('Введите запрос.');\r\n      return;\r\n    }\r\n\r\n    this.props.onSubmit(this.state.requestKey);\r\n    this.setState({ requestKey: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n           <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            value={this.state.requestKey}\r\n            onChange={this.handleRequestChange}\r\n            />\r\n        </form>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Searchbar;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ToastContainer } from 'react-toastify';\nimport './app.css';\nimport pixabayApi from './components/pixabay-api';\nimport ImagesErrorView from './components/ImagesErrorView';\nimport ImagePendingView from './components/ImagePendingView';\nimport ImageGallery from './components/ImageGallery';\nimport Button from './components/Button';\nimport Searchbar from './components/Searchbar';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nclass App extends Component {\n  state = {\n    error: null,\n    status: 'idle',\n    requestKey: '',\n    page: 1,\n    images: [],\n  };\n\n  static propTypes = {\n    requestKey: PropTypes.string.isRequired,\n    page: PropTypes.number.isRequired,\n    images: PropTypes.array.isRequired,\n  };\n\n  handleFormSubmit = newRequestKey => {\n    this.setState({ requestKey: newRequestKey, page: 1, images: [] });\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevName = prevState.requestKey;\n    const nextName = this.state.requestKey;\n\n    if (prevName !== nextName) {\n      this.renderImages();\n    }\n  }\n\n  renderImages = () => {\n    const { requestKey, page } = this.state;\n\n    pixabayApi\n      .fetchImages(requestKey, page)\n      .then(response =>\n        this.setState(prevState => ({\n          images: [...prevState.images, ...response.hits],\n          page: prevState.page + 1,\n        })),\n      )\n      .catch(error => this.setState({ error, status: Status.REJECTED }))\n      .finally(() => this.setState({ status: Status.RESOLVED }));\n  };\n\n  render() {\n    const { status, error } = this.state;\n\n    return (\n      <>\n        <Searchbar onSubmit={this.handleFormSubmit}></Searchbar>\n        <ToastContainer autoClose={3000} />\n\n        {status === Status.IDLE && (\n          <p className=\"welcomeText\">Please enter your search term</p>\n        )}\n\n        {status === Status.PENDING && <ImagePendingView />}\n\n        {status === Status.REJECTED && (\n          <ImagesErrorView message={error.message} />\n        )}\n\n        {status === Status.RESOLVED && (\n          <>\n            <ImageGallery images={this.state.images} />\n            <Button onClick={this.renderImages} />\n          </>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}